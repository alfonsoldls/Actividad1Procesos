package hilos_y_sockets_cliente;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Scanner;

public class Cliente {

	public static final int PUERTO = 9999;
	public static final String IP_SERVER = "localhost";
	
	public static void main(String[] args) {
		System.out.println("      APLICACIÓN DEL CLIENTE       ");
		System.out.println("-----------------------------------");

		InetSocketAddress direccionServidor = new InetSocketAddress(IP_SERVER, PUERTO);
		
		
		String peticion = "";
		String id = "";
		String titulo = "";
		String director = "";
		String precio = "";
		String busqueda = "";
		
		try (Scanner sc = new Scanner(System.in);){

			String opcion = "";			
			
			do {		
						System.out.println("               MENÚ                ");
						System.out.println("-----------------------------------");
						System.out.println("1. Consultar película por ID       ");
						System.out.println("2. Consultar película por título   ");
						System.out.println("3. Consultar películas por director");
						System.out.println("4. Añadir película                 ");
						System.out.println("5. Salir de la aplicación          ");
						System.out.println("                                   ");
						System.out.println("Seleccione una opción:");
						
						opcion = sc.nextLine();
						
						switch(opcion) {
							case "1":
								System.out.println("Introduzca el ID de la película que desea buscar:");
								peticion = sc.nextLine();
								break;
							
							case "2":
								System.out.println("Introduzca el título de la película que desea buscar:");
								peticion = sc.nextLine();
								break;
								
							case "3":
								System.out.println("Introduzca el director de la/s película/s que desea buscar:");
								peticion = sc.nextLine();
								break;
								
							case "4":
								int idNumerico = 0;
						        boolean esEntero = false;

						        while (!esEntero) {
						            System.out.println("Introduzca el ID de la película que desea añadir:");
						            id = sc.nextLine();

						            try {
						                idNumerico = Integer.parseInt(id);
						                esEntero = true;
						            } catch (NumberFormatException e) {
						                System.out.println("El ID introducido no es un número entero. Inténtalo de nuevo.");
						            }
						        }
								
								System.out.println("Introduzca el título de la película que desea añadir:");
								titulo = sc.nextLine();
								
								System.out.println("Introduzca el director de la película que desea añadir:");
								director = sc.nextLine();

								double precioNumerico = 0.0;
						        boolean esDouble = false;

						        while (!esDouble) {
						            System.out.println("Introduzca el precio de la película que desea añadir:");
						            precio = sc.nextLine();

						            try {
						            	precioNumerico = Double.parseDouble(precio);
						            	esDouble = true;
						            } catch (NumberFormatException e) {
						                System.out.println("El ID introducido no es un número entero. Inténtalo de nuevo.");
						            }
						        }
						        
						        peticion = id + "-" + titulo + "-" + director + "-" + precio;
								break;
								
							case "5":
								System.out.println("Saliendo del programa...");
								break;
								
							default:
								System.out.println("Introduzca una opción válida:");
								break;
								
						}
						
						if (opcion.equals("1") || opcion.equals("2") || opcion.equals("3") || opcion.equals("4")) {
							
							busqueda = opcion +"-"+peticion;
							
							//Establecemos la conexión
							Socket socketToServer = new Socket();
							socketToServer.connect(direccionServidor);
							//System.out.println("CONEXIÓN ESTABLECIDA");
							
							PrintStream salida = new PrintStream(socketToServer.getOutputStream());
							
							salida.println(busqueda);
							
							InputStreamReader entrada = new InputStreamReader(socketToServer.getInputStream());
							
							BufferedReader bf = new BufferedReader(entrada);
							
							String respuesta = bf.readLine();
							
							if (opcion.equals("3")) {
								String[] respuestaDirectores = respuesta.split("&");
								for (int i = 0; i<respuestaDirectores.length; i++)
								System.out.println(respuestaDirectores[i]);
							}else {
								System.out.println(respuesta);
							}
							socketToServer.close();
						}
						
			}	while (!opcion.equals("5"));
		
			}catch (UnknownHostException e) {
				System.err.println("CLIENTE: No encuentro el servidor en la dirección" + IP_SERVER);
				e.printStackTrace();
			} catch (IOException e) {
				System.err.println("CLIENTE: Error de entrada/salida");
				e.printStackTrace();
			} catch (Exception e) {
				System.err.println("CLIENTE: Error -> " + e);
				e.printStackTrace();
			}
			
			System.out.println("CLIENTE: Fin del programa");
		}

	}