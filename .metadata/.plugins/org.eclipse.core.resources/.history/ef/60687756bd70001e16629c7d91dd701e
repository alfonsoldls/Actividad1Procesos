package hilos_y_sockets_servidor;

import java.io.*;
import java.net.*;
import java.util.*;
import peliculas.Pelicula;

public class Servidor {

	public static final int PUERTO = 9999;
	
    static List<Pelicula> peliculas = new ArrayList<>();

    static {
        peliculas.add(new Pelicula(1, "Pulp Fiction", "Quentin Tarantino", 15.99));
        peliculas.add(new Pelicula(2, "El Padrino", "Francis Ford Coppola", 19.95));
        peliculas.add(new Pelicula(3, "Scarface", "Brian De Palma", 9.90));
        peliculas.add(new Pelicula(4, "Million Dollar Baby", "Clint Eastwood", 5.95));
        peliculas.add(new Pelicula(5, "Smokin' Aces", "Joe Carnahan", 17.5));
    }
    
    public static Pelicula buscarPeliculaPorId(List<Pelicula> peliculas, int id) {
        for (Pelicula pelicula : peliculas) {
            if (pelicula.getId() == id) {
                return pelicula;
            }
        }
        return null;
    }
    
    public static Pelicula buscarPeliculaPorTitulo(List<Pelicula> peliculas, String titulo) {
        for (Pelicula pelicula : peliculas) {
            if (pelicula.getTitulo().equalsIgnoreCase(titulo)) {
                return pelicula;
            }
        }
        return null;
    }
    
    public static List<Pelicula> buscarPeliculaPorDirector(List<Pelicula> peliculas, String director) {
        List<Pelicula> peliculaDirectores = new ArrayList<>();
    	for (Pelicula pelicula : peliculas) {
            if (pelicula.getDirector().equalsIgnoreCase(director)) {
            	peliculaDirectores.add(pelicula);
            }
        }
    	if (peliculaDirectores.isEmpty()) {
    		return null;
    	}else {
    		return peliculaDirectores;
    	}
        
    }

	public static void main(String[] args) {
		
		
	
		System.out.println("      APLICACIÓN DEL SERVIDOR      ");
		System.out.println("-----------------------------------");
		
		InputStreamReader entrada = null;
		PrintStream salida = null;
		
		Socket socketToClient = null;
		
		InetSocketAddress direccion = new InetSocketAddress(PUERTO);
		
		try (ServerSocket serverSocket = new ServerSocket()){
			
			serverSocket.bind(direccion);
			
			int peticion = 0;
			
			while(true) {
				
				socketToClient = serverSocket.accept();
				System.out.println("Petición número "+ ++peticion +" recibida.");
				
				entrada = new InputStreamReader(socketToClient.getInputStream());
				BufferedReader bf = new BufferedReader(entrada);
				
				String stringRecibido = bf.readLine();
				
				System.out.println("Ha llegado el siguiente String: " + stringRecibido);
				
				String[] peticionCliente = stringRecibido.split("-");
				
				int opcion = Integer.parseInt(peticionCliente[0]);
				
				Object respuesta = null;
				Pelicula pelicula = null;
				
					switch (opcion) {
						case 1:
							int idPelicula = Integer.parseInt(peticionCliente[1]);
							
							pelicula = buscarPeliculaPorId(peliculas, idPelicula);
					        if (pelicula != null) {
					        	respuesta = "ID: " + pelicula.getId() + " - Título: " + pelicula.getTitulo() + " - Director: " + pelicula.getDirector() + " - Precio: " + pelicula.getPrecio() + "€";
					        	System.out.println(respuesta);
					        } else {
					            respuesta = "No se encontró la película con el ID especificado.";
					            System.out.println(respuesta);
					        }
							salida = new PrintStream(socketToClient.getOutputStream());
							salida.print(respuesta);
					        
							break;
						
						case 2:
							String tituloPelicula = peticionCliente[1];
							pelicula = buscarPeliculaPorTitulo(peliculas, tituloPelicula);
					        if (pelicula != null) {
					        	respuesta = "ID: " + pelicula.getId() + " - Título: " + pelicula.getTitulo() + " - Director: " + pelicula.getDirector() + " - Precio: " + pelicula.getPrecio() + "€";
					        	System.out.println(respuesta);
					        } else {
					            respuesta = "No se encontró la película con el título especificado.";
					            System.out.println(respuesta);
					        }
							salida = new PrintStream(socketToClient.getOutputStream());
							salida.print(respuesta);
					        
							break;
							
						case 3:
							String directorPelicula = peticionCliente[1];
							
							break;
							
						case 4:
							int id = Integer.parseInt(peticionCliente[1]);
							String titulo = peticionCliente[2];
							String director = peticionCliente[3];
							double precio = Double.parseDouble(peticionCliente[4]);
							
							peliculas.add(new Pelicula(id, titulo, director, precio));
							respuesta = "Película añadida correctamente";
							System.out.println(respuesta);
							salida = new PrintStream(socketToClient.getOutputStream());
							salida.print(respuesta);
							break;
					}
					
				socketToClient.close();
			}
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

}
